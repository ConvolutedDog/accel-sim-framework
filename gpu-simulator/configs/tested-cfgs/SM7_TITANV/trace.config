-trace_opcode_latency_initiation_int 2,2
-trace_opcode_latency_initiation_sp 2,2
-trace_opcode_latency_initiation_dp 8,4
-trace_opcode_latency_initiation_sfu 20,8
-trace_opcode_latency_initiation_tensor 8,4

#execute branch insts on spec unit 1
#in Volta, there is a dedicated branch unit
#<enabled>,<num_units>,<max_latency>,<ID_OC_SPEC>,<OC_EX_SPEC>,<NAME>
-specialized_unit_1 1,4,4,4,4,BRA
-trace_opcode_latency_initiation_spec_op_1 4,4

#TEX unit, make fixed latency for all tex insts
-specialized_unit_2 1,4,200,4,4,TEX
-trace_opcode_latency_initiation_spec_op_2 200,4

#tensor unit
-specialized_unit_3 1,4,8,4,4,TENSOR
-trace_opcode_latency_initiation_spec_op_3 8,4

# std::cout << "-trace_opcode_latency_initiation_tensor "
#           << lat / SASS_hmma_per_PTX_wmma << ","
#           << init / SASS_hmma_per_PTX_wmma << std::endl;
# std::cout << "-specialized_unit_3 1," << WARP_SCHEDS_PER_SM << ","
#           << lat / SASS_hmma_per_PTX_wmma << "," << WARP_SCHEDS_PER_SM
#           << "," << WARP_SCHEDS_PER_SM << ",TENSOR" << std::endl;
# std::cout << "-trace_opcode_latency_initiation_spec_op_3 "
#           << lat / SASS_hmma_per_PTX_wmma << ","
#           << init / SASS_hmma_per_PTX_wmma << std::endl;
#
# SASS_hmma_per_PTX_wmma是每条PTX指令wmma会编译成多少条hmma指令
# WARP_SCHEDS_PER_SM是每个SM的warp调度器数量
# lat是PTX指令wmma的延迟
# init是PTX指令wmma在dispatch reg中的启动延迟